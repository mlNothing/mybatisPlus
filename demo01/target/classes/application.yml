## mysql Config
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mybatisplus?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
    username: root
    password: admin

logging:
  level:
    com.baomidou.mybatisplus.samples.quickstart: debug

#mybatis-plus:
#  config-location: classpath:mybatis-config.xml
  #MyBatis 配置文件位置，如果您有单独的 MyBatis 配置，请将其路径配置到 configLocation 中
# 具体的实现就是找到 1.MybatisPlusConfig 中MybatisPlusInterceptor 中的全路径
# 复制到 mybatis-config.xml 然后配置    <plugin interceptor="com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor"></plugin>
# 2. 注释掉里面的bean
# 3. 打开上面的配置

  #MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行
  #该配置，告诉 Mapper 所对应的 XML 文件位置。
#  mapper-locations: classpath*:mybatis/*.xml
#  #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使
#  #用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
##  type-aliases-package: com.example.demo.pojo
# configuration:
##   map-underscore-to-camel-case: false  自动关闭自动驼峰映射  数据库列名a_one -->属性名 aOne
##  cache-enabled: false 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。
#  global-config:
#    dbConfig:
#      idType: auto 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。
#       tablePrefix: tb_ 表名前缀，全局配置后可省略@TableName()配置。